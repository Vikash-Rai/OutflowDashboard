{"version":3,"file":"static/js/2033.72776c00.chunk.js","mappings":"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","sources":["components/Breadcrumbs.js","components/HeaderBreadcrumbs.js","sections/@dashboard/user/UserNewEditForm.js","pages/dashboard/UserCreate.js","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","../node_modules/capital-case/src/index.ts","../node_modules/param-case/src/index.ts","../node_modules/dot-case/src/index.ts","../node_modules/upper-case-first/src/index.ts"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport { Box, Link, Typography, Breadcrumbs as MUIBreadcrumbs } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nBreadcrumbs.propTypes = {\n  activeLast: PropTypes.bool,\n  links: PropTypes.array.isRequired,\n};\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }) {\n  const currentLink = links[links.length - 1].name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={<Box component=\"span\" sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }} />}\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nLinkItem.propTypes = {\n  link: PropTypes.shape({\n    href: PropTypes.string,\n    icon: PropTypes.any,\n    name: PropTypes.string,\n  }),\n};\n\nfunction LinkItem({ link }) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import isString from 'lodash/isString';\nimport PropTypes from 'prop-types';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\nHeaderBreadcrumbs.propTypes = {\n  links: PropTypes.array,\n  action: PropTypes.node,\n  heading: PropTypes.string.isRequired,\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  sx: PropTypes.object,\n};\n\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {isString(moreLink) ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { useCallback, useEffect, useMemo } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useNavigate } from 'react-router-dom';\n// form\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\n// @mui\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Card, Grid, Stack, Switch, Typography, FormControlLabel } from '@mui/material';\n// utils\nimport { fData } from '../../../utils/formatNumber';\n// routes\nimport { PATH_DASHBOARD } from '../../../routes/paths';\n// _mock\nimport { countries } from '../../../_mock';\n// components\nimport Label from '../../../components/Label';\nimport { FormProvider, RHFSelect, RHFSwitch, RHFTextField, RHFUploadAvatar } from '../../../components/hook-form';\n\n// ----------------------------------------------------------------------\n\nUserNewEditForm.propTypes = {\n  isEdit: PropTypes.bool,\n  currentUser: PropTypes.object,\n};\n\nexport default function UserNewEditForm({ isEdit, currentUser }) {\n  const navigate = useNavigate();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const NewUserSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    email: Yup.string().required('Email is required').email(),\n    phoneNumber: Yup.string().required('Phone number is required'),\n    address: Yup.string().required('Address is required'),\n    country: Yup.string().required('country is required'),\n    company: Yup.string().required('Company is required'),\n    state: Yup.string().required('State is required'),\n    city: Yup.string().required('City is required'),\n    role: Yup.string().required('Role Number is required'),\n    avatarUrl: Yup.mixed().test('required', 'Avatar is required', (value) => value !== ''),\n  });\n\n  const defaultValues = useMemo(\n    () => ({\n      name: currentUser?.name || '',\n      email: currentUser?.email || '',\n      phoneNumber: currentUser?.phoneNumber || '',\n      address: currentUser?.address || '',\n      country: currentUser?.country || '',\n      state: currentUser?.state || '',\n      city: currentUser?.city || '',\n      zipCode: currentUser?.zipCode || '',\n      avatarUrl: currentUser?.avatarUrl || '',\n      isVerified: currentUser?.isVerified || true,\n      status: currentUser?.status,\n      company: currentUser?.company || '',\n      role: currentUser?.role || '',\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [currentUser]\n  );\n\n  const methods = useForm({\n    resolver: yupResolver(NewUserSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    watch,\n    control,\n    setValue,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  const values = watch();\n\n  useEffect(() => {\n    if (isEdit && currentUser) {\n      reset(defaultValues);\n    }\n    if (!isEdit) {\n      reset(defaultValues);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEdit, currentUser]);\n\n  const onSubmit = async () => {\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 500));\n      reset();\n      enqueueSnackbar(!isEdit ? 'Create success!' : 'Update success!');\n      navigate(PATH_DASHBOARD.user.list);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDrop = useCallback(\n    (acceptedFiles) => {\n      const file = acceptedFiles[0];\n\n      if (file) {\n        setValue(\n          'avatarUrl',\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        );\n      }\n    },\n    [setValue]\n  );\n\n  return (\n    <FormProvider methods={methods} onSubmit={handleSubmit(onSubmit)}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} md={4}>\n          <Card sx={{ py: 10, px: 3 }}>\n            {isEdit && (\n              <Label\n                color={values.status !== 'active' ? 'error' : 'success'}\n                sx={{ textTransform: 'uppercase', position: 'absolute', top: 24, right: 24 }}\n              >\n                {values.status}\n              </Label>\n            )}\n\n            <Box sx={{ mb: 5 }}>\n              <RHFUploadAvatar\n                name=\"avatarUrl\"\n                accept=\"image/*\"\n                maxSize={3145728}\n                onDrop={handleDrop}\n                helperText={\n                  <Typography\n                    variant=\"caption\"\n                    sx={{\n                      mt: 2,\n                      mx: 'auto',\n                      display: 'block',\n                      textAlign: 'center',\n                      color: 'text.secondary',\n                    }}\n                  >\n                    Allowed *.jpeg, *.jpg, *.png, *.gif\n                    <br /> max size of {fData(3145728)}\n                  </Typography>\n                }\n              />\n            </Box>\n\n            {isEdit && (\n              <FormControlLabel\n                labelPlacement=\"start\"\n                control={\n                  <Controller\n                    name=\"status\"\n                    control={control}\n                    render={({ field }) => (\n                      <Switch\n                        {...field}\n                        checked={field.value !== 'active'}\n                        onChange={(event) => field.onChange(event.target.checked ? 'banned' : 'active')}\n                      />\n                    )}\n                  />\n                }\n                label={\n                  <>\n                    <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                      Banned\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                      Apply disable account\n                    </Typography>\n                  </>\n                }\n                sx={{ mx: 0, mb: 3, width: 1, justifyContent: 'space-between' }}\n              />\n            )}\n\n            <RHFSwitch\n              name=\"isVerified\"\n              labelPlacement=\"start\"\n              label={\n                <>\n                  <Typography variant=\"subtitle2\" sx={{ mb: 0.5 }}>\n                    Email Verified\n                  </Typography>\n                  <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n                    Disabling this will automatically send the user a verification email\n                  </Typography>\n                </>\n              }\n              sx={{ mx: 0, width: 1, justifyContent: 'space-between' }}\n            />\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={8}>\n          <Card sx={{ p: 3 }}>\n            <Box\n              sx={{\n                display: 'grid',\n                columnGap: 2,\n                rowGap: 3,\n                gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(2, 1fr)' },\n              }}\n            >\n              <RHFTextField name=\"name\" label=\"Full Name\" />\n              <RHFTextField name=\"email\" label=\"Email Address\" />\n              <RHFTextField name=\"phoneNumber\" label=\"Phone Number\" />\n\n              <RHFSelect name=\"country\" label=\"Country\" placeholder=\"Country\">\n                <option value=\"\" />\n                {countries.map((option) => (\n                  <option key={option.code} value={option.label}>\n                    {option.label}\n                  </option>\n                ))}\n              </RHFSelect>\n\n              <RHFTextField name=\"state\" label=\"State/Region\" />\n              <RHFTextField name=\"city\" label=\"City\" />\n              <RHFTextField name=\"address\" label=\"Address\" />\n              <RHFTextField name=\"zipCode\" label=\"Zip/Code\" />\n              <RHFTextField name=\"company\" label=\"Company\" />\n              <RHFTextField name=\"role\" label=\"Role\" />\n            </Box>\n\n            <Stack alignItems=\"flex-end\" sx={{ mt: 3 }}>\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                {!isEdit ? 'Create User' : 'Save Changes'}\n              </LoadingButton>\n            </Stack>\n          </Card>\n        </Grid>\n      </Grid>\n    </FormProvider>\n  );\n}\n","import { paramCase, capitalCase } from 'change-case';\nimport { useParams, useLocation } from 'react-router-dom';\n// @mui\nimport { Container } from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// _mock_\nimport { _userList } from '../../_mock';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\n// sections\nimport UserNewEditForm from '../../sections/@dashboard/user/UserNewEditForm';\n\n// ----------------------------------------------------------------------\n\nexport default function UserCreate() {\n  const { themeStretch } = useSettings();\n\n  const { pathname } = useLocation();\n\n  const { name = '' } = useParams();\n\n  const isEdit = pathname.includes('edit');\n\n  const currentUser = _userList.find((user) => paramCase(user.name) === name);\n\n  return (\n    <Page title=\"User: Create a new user\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading={!isEdit ? 'Create a new user' : 'Edit user'}\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            { name: 'User', href: PATH_DASHBOARD.user.list },\n            { name: !isEdit ? 'New user' : capitalCase(name) },\n          ]}\n        />\n\n        <UserNewEditForm isEdit={isEdit} currentUser={currentUser} />\n      </Container>\n    </Page>\n  );\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import { noCase, Options } from \"no-case\";\nimport { upperCaseFirst } from \"upper-case-first\";\n\nexport { Options };\n\nexport function capitalCaseTransform(input: string) {\n  return upperCaseFirst(input.toLowerCase());\n}\n\nexport function capitalCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \" \",\n    transform: capitalCaseTransform,\n    ...options,\n  });\n}\n","import { dotCase, Options } from \"dot-case\";\n\nexport { Options };\n\nexport function paramCase(input: string, options: Options = {}) {\n  return dotCase(input, {\n    delimiter: \"-\",\n    ...options,\n  });\n}\n","import { noCase, Options } from \"no-case\";\n\nexport { Options };\n\nexport function dotCase(input: string, options: Options = {}) {\n  return noCase(input, {\n    delimiter: \".\",\n    ...options,\n  });\n}\n","/**\n * Upper case the first character of an input string.\n */\nexport function upperCaseFirst(input: string) {\n  return input.charAt(0).toUpperCase() + input.substr(1);\n}\n"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","isString","target","rel","noWrap","UserNewEditForm","isEdit","currentUser","navigate","useNavigate","enqueueSnackbar","useSnackbar","NewUserSchema","Yup","shape","required","email","phoneNumber","address","country","company","state","city","role","avatarUrl","test","value","defaultValues","useMemo","zipCode","isVerified","status","methods","useForm","resolver","yupResolver","reset","watch","control","setValue","handleSubmit","isSubmitting","formState","values","useEffect","onSubmit","Promise","resolve","setTimeout","PATH_DASHBOARD","console","error","handleDrop","useCallback","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","Grid","container","spacing","item","xs","md","Card","py","px","Label","textTransform","position","top","right","accept","maxSize","onDrop","helperText","mx","textAlign","fData","FormControlLabel","labelPlacement","render","field","Switch","checked","onChange","event","label","justifyContent","p","columnGap","rowGap","gridTemplateColumns","sm","placeholder","countries","option","code","Stack","LoadingButton","type","loading","UserCreate","themeStretch","useSettings","pathname","useLocation","useParams","includes","_userList","user","paramCase","Page","title","Container","capitalCase","createSvgIcon","_jsx","d","BreadcrumbCollapsedButton","styled","ButtonBase","theme","_extends","marginLeft","marginRight","palette","mode","backgroundColor","grey","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","props","ownerState","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BreadcrumbsRoot","overridesResolver","styles","breadcrumbsClasses","li","root","BreadcrumbsOl","ol","flexWrap","padding","margin","listStyle","BreadcrumbsSeparator","userSelect","insertSeparators","items","className","reduce","acc","current","index","concat","push","React","inProps","ref","useThemeProps","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","filter","child","clsx","slice","BreadcrumbCollapsed","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter","capitalCaseTransform","input","upperCaseFirst","toLowerCase","options","noCase","__assign","delimiter","transform","dotCase","charAt","toUpperCase","substr"],"sourceRoot":""}